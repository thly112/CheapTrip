{"ast":null,"code":"var _jsxFileName = \"D:\\\\hackathon\\\\CheapTrip\\\\front-end\\\\src\\\\components\\\\MapRoute.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, Polyline, Marker, Popup } from 'react-leaflet';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\n\n// Fix icon lỗi khi dùng Leaflet với React\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/images/marker-icon-2x.png',\n  iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/images/marker-icon.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/images/marker-shadow.png'\n});\nconst MapRoute = ({\n  places\n}) => {\n  _s();\n  const [coordinates, setCoordinates] = useState([]);\n  useEffect(() => {\n    const fetchCoords = async () => {\n      const results = await Promise.all(places.map(async place => {\n        const url = `https://nominatim.openstreetmap.org/search?q=${encodeURIComponent(place)}&format=json&limit=1`;\n        try {\n          const res = await fetch(url, {\n            headers: {\n              'User-Agent': 'ChipChipTravel/1.0'\n            }\n          });\n          const data = await res.json();\n          if (data[0]) {\n            return {\n              name: place,\n              lat: parseFloat(data[0].lat),\n              lon: parseFloat(data[0].lon)\n            };\n          }\n        } catch (err) {\n          console.error(`Lỗi khi lấy tọa độ cho ${place}:`, err);\n        }\n        return null;\n      }));\n      setCoordinates(results.filter(Boolean));\n    };\n    if (places.length >= 2) {\n      fetchCoords();\n    }\n  }, [places]);\n  if (coordinates.length < 2) return null;\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: [coordinates[0].lat, coordinates[0].lon],\n    zoom: 8,\n    scrollWheelZoom: true,\n    style: {\n      height: '500px',\n      width: '100%'\n    },\n    className: \"rounded shadow\",\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/\\\">OpenStreetMap</a> contributors\",\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), coordinates.map((coord, idx) => /*#__PURE__*/_jsxDEV(Marker, {\n      position: [coord.lat, coord.lon],\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: coord.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Polyline, {\n      positions: coordinates.map(c => [c.lat, c.lon]),\n      color: \"blue\",\n      weight: 4\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(MapRoute, \"mUTlqyO1NJz5A08+7KZJPXLZaSM=\");\n_c = MapRoute;\nexport default MapRoute;\nvar _c;\n$RefreshReg$(_c, \"MapRoute\");","map":{"version":3,"names":["React","useEffect","useState","MapContainer","TileLayer","Polyline","Marker","Popup","L","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","MapRoute","places","_s","coordinates","setCoordinates","fetchCoords","results","Promise","all","map","place","url","encodeURIComponent","res","fetch","headers","data","json","name","lat","parseFloat","lon","err","console","error","filter","Boolean","length","center","zoom","scrollWheelZoom","style","height","width","className","children","attribution","fileName","_jsxFileName","lineNumber","columnNumber","coord","idx","position","positions","c","color","weight","_c","$RefreshReg$"],"sources":["D:/hackathon/CheapTrip/front-end/src/components/MapRoute.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { MapContainer, TileLayer, Polyline, Marker, Popup } from 'react-leaflet';\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\n\r\n// Fix icon lỗi khi dùng Leaflet với React\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\nL.Icon.Default.mergeOptions({\r\n  iconRetinaUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/images/marker-icon-2x.png',\r\n  iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/images/marker-icon.png',\r\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/images/marker-shadow.png',\r\n});\r\n\r\nconst MapRoute = ({ places }) => {\r\n  const [coordinates, setCoordinates] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchCoords = async () => {\r\n      const results = await Promise.all(\r\n        places.map(async (place) => {\r\n          const url = `https://nominatim.openstreetmap.org/search?q=${encodeURIComponent(place)}&format=json&limit=1`;\r\n          try {\r\n            const res = await fetch(url, {\r\n              headers: { 'User-Agent': 'ChipChipTravel/1.0' },\r\n            });\r\n            const data = await res.json();\r\n            if (data[0]) {\r\n              return {\r\n                name: place,\r\n                lat: parseFloat(data[0].lat),\r\n                lon: parseFloat(data[0].lon),\r\n              };\r\n            }\r\n          } catch (err) {\r\n            console.error(`Lỗi khi lấy tọa độ cho ${place}:`, err);\r\n          }\r\n          return null;\r\n        })\r\n      );\r\n\r\n      setCoordinates(results.filter(Boolean));\r\n    };\r\n\r\n    if (places.length >= 2) {\r\n      fetchCoords();\r\n    }\r\n  }, [places]);\r\n\r\n  if (coordinates.length < 2) return null;\r\n\r\n  return (\r\n    <MapContainer\r\n      center={[coordinates[0].lat, coordinates[0].lon]}\r\n      zoom={8}\r\n      scrollWheelZoom={true}\r\n      style={{ height: '500px', width: '100%' }}\r\n      className=\"rounded shadow\"\r\n    >\r\n      <TileLayer\r\n        attribution='© <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors'\r\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n      />\r\n\r\n      {coordinates.map((coord, idx) => (\r\n        <Marker key={idx} position={[coord.lat, coord.lon]}>\r\n          <Popup>{coord.name}</Popup>\r\n        </Marker>\r\n      ))}\r\n\r\n      <Polyline\r\n        positions={coordinates.map((c) => [c.lat, c.lon])}\r\n        color=\"blue\"\r\n        weight={4}\r\n      />\r\n    </MapContainer>\r\n  );\r\n};\r\n\r\nexport default MapRoute;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}